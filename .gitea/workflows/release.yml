name: Release Calc3D

on:
  workflow_run:
    workflows: ["Build Calc3D"]
    types:
      - completed

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download variables
        uses: actions/download-artifact@v3
        with:
          name: build-vars
          path: vars

      - name: Set environment variables
        run: |
          echo "RELEASE_TAG=$(cat vars/vars.env | grep RELEASE_TAG | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(cat vars/vars.env | grep RELEASE_NAME | cut -d '=' -f2)" >> $GITHUB_ENV

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.RELEASE_NAME }}_Windows_${{ env.RELEASE_TAG }}
          path: windows_release

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.RELEASE_NAME }}_Linux_${{ env.RELEASE_TAG }}
          path: linux_release

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.RELEASE_NAME }}_Windows_${{ env.RELEASE_TAG }}
          path: windows_release

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.RELEASE_NAME }}_Linux_${{ env.RELEASE_TAG }}
          path: linux_release

      - name: Get Release URL
        id: get_release
        run: |
          echo "Fetching release URL for tag 1.0.0b"
          curl -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
               -H "Accept: application/json" \
               "https://${{ secrets.HOST }}/api/v1/repos/${{ secrets.ORG }}/${{ secrets.REPO }}/releases/tags/1.0.0b" > release.json
          RELEASE_URL=$(jq -r '.url' release.json)
          echo "Found Release URL: $RELEASE_URL"
          echo "RELEASE_URL=$RELEASE_URL" >> $GITHUB_ENV

      - name: Upload Windows Release to Gitea
        run: |
          echo "Uploading Windows artifact to Gitea"
          UPLOAD_URL="${{ env.RELEASE_URL }}/assets?name=${{ env.RELEASE_NAME }}_Windows_${{ env.RELEASE_TAG }}.zip"
          curl -X POST \
               -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
               -H "Content-Type: multipart/form-data" \
               --form "attachment=@windows_release/${{ env.RELEASE_NAME }}_Windows_${{ env.RELEASE_TAG }}.zip" \
               "$UPLOAD_URL" -v

      - name: Upload Linux Release to Gitea
        run: |
          echo "Uploading Linux artifact to Gitea"
          UPLOAD_URL="${{ env.RELEASE_URL }}/assets?name=${{ env.RELEASE_NAME }}_Linux_${{ env.RELEASE_TAG }}_amd64.deb"
          curl -X POST \
               -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
               -H "Content-Type: multipart/form-data" \
               --form "attachment=@linux_release/${{ env.RELEASE_NAME }}_Linux_${{ env.RELEASE_TAG }}_amd64.deb" \
               "$UPLOAD_URL" -v