name: Build Calc3D

env:
  RELEASE_TAG: 1.0.0b
  RELEASE_NAME: Calc3D_by_Risen

on:
  push:
    branches:
      - master

jobs:
  build-windows:
    runs-on: win_builder
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up MinGW
        shell: pwsh
        run: |
          $env:PATH = "C:\Qt\Tools\mingw1310_64\bin;" + $env:PATH
          Write-Host "MinGW path set"

      - name: Configure CMake
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path "build" -Force
          Set-Location -Path "build"
          cmake -G "MinGW Makefiles" -DCMAKE_PREFIX_PATH="C:\Qt\6.9.0\mingw_64" ../src

      - name: Build with MinGW
        shell: pwsh
        run: |
          Set-Location -Path "build"
          mingw32-make

      - name: Prepare Release
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path "Release" -Force
          Copy-Item -Path "build\Calc3D.exe" -Destination "Release\"
          & "C:\Qt\6.9.0\mingw_64\bin\windeployqt.exe" "Release\Calc3D.exe"
          Copy-Item -Path "C:\Qt\Tools\mingw1310_64\bin\libgcc_s_seh-1.dll" -Destination "Release\"
          Copy-Item -Path "C:\Qt\Tools\mingw1310_64\bin\libstdc++-6.dll" -Destination "Release\"
          Copy-Item -Path "C:\Qt\Tools\mingw1310_64\bin\libwinpthread-1.dll" -Destination "Release\"

      - name: Archive Release
        shell: pwsh
        run: |
          Set-Location -Path "Release"
          $zipName = "${{ env.RELEASE_NAME }}_Windows_${{ env.RELEASE_TAG }}.zip"
          & "7z" a $zipName *

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RELEASE_NAME }}_Windows_${{ env.RELEASE_TAG }}
          path: Release/${{ env.RELEASE_NAME }}_Windows_${{ env.RELEASE_TAG }}.zip

  build-linux:
    runs-on: lin-builder
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake qt6-base-dev libgl1-mesa-dev dpkg-dev wget file patchelf

      - name: Install linuxdeployqt
        run: |
          wget -q https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage
          ./linuxdeployqt-continuous-x86_64.AppImage --appimage-extract
          sudo mv squashfs-root/usr /opt/linuxdeployqt
          sudo ln -sf /opt/linuxdeployqt/bin/linuxdeployqt /usr/local/bin/linuxdeployqt

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/cmake/Qt6 ../src

      - name: Build
        run: |
          cd build
          make -j$(nproc)

      - name: Prepare AppDir structure
        run: |
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/lib
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/64x64/apps
          cp build/Calc3D AppDir/usr/bin/
          chmod +x AppDir/usr/bin/Calc3D
          echo "[Desktop Entry]" > AppDir/usr/share/applications/calc3d.desktop
          echo "Name=Calc3D" >> AppDir/usr/share/applications/calc3d.desktop
          echo "Exec=Calc3D" >> AppDir/usr/share/applications/calc3d.desktop
          echo "Type=Application" >> AppDir/usr/share/applications/calc3d.desktop
          echo "Terminal=false" >> AppDir/usr/share/applications/calc3d.desktop
          echo "Categories=Utility;" >> AppDir/usr/share/applications/calc3d.desktop

      - name: Bundle dependencies with linuxdeployqt
        run: |
          linuxdeployqt AppDir/usr/share/applications/calc3d.desktop -bundle-non-qt-libs -no-copy-copyright-files

      - name: Prepare Debian package structure
        run: |
          mkdir -p deb_package/DEBIAN
          mkdir -p deb_package/usr
          cp -r AppDir/usr/* deb_package/usr/
          chmod +x deb_package/usr/bin/Calc3D
          echo "Package: calc3d" > deb_package/DEBIAN/control
          echo "Version: ${{ env.RELEASE_TAG }}" >> deb_package/DEBIAN/control
          echo "Section: utils" >> deb_package/DEBIAN/control
          echo "Priority: optional" >> deb_package/DEBIAN/control
          echo "Architecture: amd64" >> deb_package/DEBIAN/control
          echo "Maintainer: Your Name <your.email@example.com>" >> deb_package/DEBIAN/control
          echo "Description: Calc3D - A 3D Calculator Application (standalone)" >> deb_package/DEBIAN/control

      - name: Build Debian package
        run: |
          dpkg-deb --build deb_package
          mv deb_package.deb ${{ env.RELEASE_NAME }}_Linux_${{ env.RELEASE_TAG }}_amd64.deb

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RELEASE_NAME }}_Linux_${{ env.RELEASE_TAG }}
          path: ${{ env.RELEASE_NAME }}_Linux_${{ env.RELEASE_TAG }}_amd64.deb

      - name: Save variables
        run: |
          echo "RELEASE_TAG=${{ env.RELEASE_TAG }}" >> vars.env
          echo "RELEASE_NAME=${{ env.RELEASE_NAME }}" >> vars.env

      - name: Upload variables and package
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifacts
          path: |
            ${{ env.RELEASE_NAME }}_Linux_${{ env.RELEASE_TAG }}_amd64.deb
            vars.env