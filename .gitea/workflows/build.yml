name: Build and Release Calc3D

on:
  push:
    branches:
      - master

jobs:
  build-windows:
    runs-on: win_builder
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up MinGW
        shell: pwsh
        run: |
          $env:PATH = "C:\Qt\Tools\mingw1310_64\bin;" + $env:PATH
          Write-Host "MinGW path set"

      - name: Configure CMake
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path "build" -Force
          Set-Location -Path "build"
          cmake -G "MinGW Makefiles" -DCMAKE_PREFIX_PATH="C:\Qt\6.9.0\mingw_64" ../src

      - name: Build with MinGW
        shell: pwsh
        run: |
          Set-Location -Path "build"
          mingw32-make

      - name: Prepare Release
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path "Release" -Force
          Copy-Item -Path "build\Calc3D.exe" -Destination "Release\"
          & "C:\Qt\6.9.0\mingw_64\bin\windeployqt.exe" "Release\Calc3D.exe"
          Copy-Item -Path "C:\Qt\Tools\mingw1310_64\bin\libgcc_s_seh-1.dll" -Destination "Release\"
          Copy-Item -Path "C:\Qt\Tools\mingw1310_64\bin\libstdc++-6.dll" -Destination "Release\"
          Copy-Item -Path "C:\Qt\Tools\mingw1310_64\bin\libwinpthread-1.dll" -Destination "Release\"

      - name: Archive Release
        shell: pwsh
        run: |
          Set-Location -Path "Release"
          & "7z" a "Calc3D_Release.zip" *
          Get-ChildItem

      - name: Get Release URL
        id: get_release
        shell: pwsh
        run: |
          Write-Host "Fetching release URL for tag 1.0.0b"
          $headers = @{
            "Authorization" = "token ${{ secrets.ACCESS_TOKEN }}"
            "Accept" = "application/json"
          }
          $response = Invoke-RestMethod -Uri "https://${{ secrets.HOST }}/api/v1/repos/${{ secrets.ORG }}/${{ secrets.REPO }}/releases/tags/1.0.0b" -Headers $headers -Method Get
          $releaseUrl = $response.url
          Write-Host "Found Release URL: $releaseUrl"
          echo "RELEASE_URL=$ReleaseUrl" >> $env:GITHUB_ENV

      - name: Upload to Gitea Release
        shell: pwsh
        run: |
          Write-Host "Uploading to Gitea"
          $uploadUrl = "${{ env.RELEASE_URL }}/assets?name=Calc3D_Release.zip"
          Write-Host "URL: $uploadUrl"
          $headers = @{
            "Authorization" = "token ${{ secrets.ACCESS_TOKEN }}"
            "Content-Type" = "multipart/form-data"
          }
          Invoke-RestMethod -Uri $uploadUrl -Headers $headers -Method Post -Form @{attachment = Get-Item "Release/Calc3D_Release.zip"} -Verbose

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake qt6-base-dev libgl1-mesa-dev dpkg-dev

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/cmake/Qt6 ../src

      - name: Build
        run: |
          cd build
          make -j$(nproc)

      - name: Prepare Debian package structure
        run: |
          mkdir -p deb_package/DEBIAN
          mkdir -p deb_package/usr/local/bin
          mkdir -p deb_package/usr/share/applications
          mkdir -p deb_package/usr/share/icons/hicolor/64x64/apps
          cp build/Calc3D deb_package/usr/local/bin/
          chmod +x deb_package/usr/local/bin/Calc3D
          echo "Package: calc3d" > deb_package/DEBIAN/control
          echo "Version: 1.0.0b" >> deb_package/DEBIAN/control
          echo "Section: utils" >> deb_package/DEBIAN/control
          echo "Priority: optional" >> deb_package/DEBIAN/control
          echo "Architecture: amd64" >> deb_package/DEBIAN/control
          echo "Maintainer: Your Name <your.email@example.com>" >> deb_package/DEBIAN/control
          echo "Description: Calc3D - A 3D Calculator Application" >> deb_package/DEBIAN/control
          echo "[Desktop Entry]" > deb_package/usr/share/applications/calc3d.desktop
          echo "Name=Calc3D" >> deb_package/usr/share/applications/calc3d.desktop
          echo "Exec=/usr/local/bin/Calc3D" >> deb_package/usr/share/applications/calc3d.desktop
          echo "Type=Application" >> deb_package/usr/share/applications/calc3d.desktop
          echo "Terminal=false" >> deb_package/usr/share/applications/calc3d.desktop
          echo "Categories=Utility;" >> deb_package/usr/share/applications/calc3d.desktop

      - name: Build Debian package
        run: |
          dpkg-deb --build deb_package
          mv deb_package.deb calc3d_1.0.0b_amd64.deb

      - name: Get Release URL
        id: get_release_linux
        run: |
          echo "Fetching release URL for tag 1.0.0b"
          curl -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
               -H "Accept: application/json" \
               "https://${{ secrets.HOST }}/api/v1/repos/${{ secrets.ORG }}/${{ secrets.REPO }}/releases/tags/1.0.0b" > release.json
          RELEASE_URL=$(jq -r '.url' release.json)
          echo "Found Release URL: $RELEASE_URL"
          echo "RELEASE_URL=$RELEASE_URL" >> $GITHUB_ENV

      - name: Upload Debian package to Gitea Release
        run: |
          echo "Uploading to Gitea"
          UPLOAD_URL="${{ env.RELEASE_URL }}/assets?name=calc3d_1.0.0b_amd64.deb"
          echo "URL: $UPLOAD_URL"
          curl -X POST \
               -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
               -H "Content-Type: multipart/form-data" \
               --form "attachment=@calc3d_1.0.0b_amd64.deb" \
               "$UPLOAD_URL" -v